<?php
	function print_draw_table_dup_pairs($combo,$wheel_id)
	{
		require ("includes/mysqli.php"); 

		global $draw_prefix,$dup_range_all,$hml,$rank_limit,$curr_date,$draw_table_name,$range_low,$range_high,
		$b1_low,$b1_high,$b2_low,$b2_high,$b3_low,$b3_high,$b4_low,$b4_high,$b5_low,$b5_high,$balls;

		echo "<h1>--- combo $combo hml = $hml ---</h1>";

		require ("includes/combo_switch_2.incl");
		require ("includes_ga_f5/decade_draw_range.incl");

		$draw_count = 0;

		############################################################################
		
		$rank_limit = array_fill (0,7,0);

		for ($x = 0; $x <= 5; $x++)
		{
			$query = "SELECT count(*) FROM ga_f5_temp2_26 ";
			$query .= "WHERE count = $x ";

			#echo "$query<br>";

			$mysqli_result = mysqli_query($mysqli_link, $query) or die (mysqli_error($mysqli_link));

			$row_count = mysqli_fetch_array($mysqli_result);

			if ($row_count[0] <= 3)
			{
				$rank_limit[$x] = 1;
			#} elseif ($row_count[0] > 3) {
			#	$rank_limit[$x] = 3;
			} else {
				$rank_limit[$x] = intval($row_count[0]/3);
			}

			if ($rank_limit[$x] > 3)
			{
				$rank_limit[$x] = 3;
			}
		}

		$query = "SELECT count(*) FROM ga_f5_temp2_26 ";
		$query .= "WHERE count >= 6 ";

		#echo "$query<br>";

		$mysqli_result = mysqli_query($mysqli_link, $query) or die (mysqli_error($mysqli_link));

		$row_count = mysqli_fetch_array($mysqli_result);

		if ($row_count[0] <= 3)
		{
			$rank_limit[6] = 1;
		} else {
			$rank_limit[6] = intval($row_count[0]/3);
		}

		if ($rank_limit[6] > 3)
		{
			$rank_limit[6] = 3;
		}

		### rank buffer ### change to increase rank_limit by 1
		for ($t = 0; $t <= 6; $t++)
		{
			#$rank_limit[$x]++;
		}

		$hml9 = $hml + 9;
		
		$sum_array = array();
		
		$count_col12_all = 0;

		### wheel ###
		$sql_wheel = "SELECT * FROM `ga_f5_wheel_sum_table` WHERE id = $wheel_id ";

		#echo "$sql_wheel<br>";

		$mysqli_result_wheel = mysqli_query($sql_wheel, $mysqli_link) or die (mysqli_error($mysqli_link));

		while($row_wheel = mysqli_fetch_array($mysqli_result_wheel))
		{
			echo "<h2>sum = $row_wheel[sum] - $row_wheel[even],$row_wheel[odd],$row_wheel[d501],$row_wheel[d502] - $row_wheel[wa]%</h2>";

			$count_col12 = 0;

			### c3 ##########################################################################################
			
			$col1_array = array();
			$comb1_array = array($col1_array);

			$comb1_count = 0;

			$query_ct2 = "SELECT DISTINCT * FROM ga_f5_combo_pair_$combo";
			if (1)
			{
				$query_ct2 .= "_$hml ";
			}
			$query_ct2 .= " WHERE year5 > 0 ";
			if ($hml)
			{
				$hml_temp = $hml - 500;
				$query_ct2 .= " ORDER BY percent_y1 DESC, percent_y5 ";
			} else {
				$query_ct2 .= " ORDER BY year1 DESC, year5 DESC ";
			}
			#$query_ct2 .= " ORDER BY count DESC, percent_y1 DESC, percent_y5 DESC, year9 DESC, year8 DESC, year7 DESC, year6 DESC , year5 DESC , year4 DESC , year3 DESC , year2 DESC , year1 DESC ";
			$query_ct2 .= "LIMIT 10 ";

			print "$query_ct2<p>";

			$mysqli_result_ct2 = mysqli_query($query_ct2, $mysqli_link) or die (mysqli_error($mysqli_link));

			while($row_ct2 = mysqli_fetch_array($mysqli_result_ct2))
			{
				$comb1_array[$comb1_count][0] = $row_ct2[num1];	
				$comb1_array[$comb1_count][1] = $row_ct2[num2];
				$comb1_count++;
			}

			#echo "<strong>comb1_array = </strong>";
			#print_r ($comb1_array);
			#echo "<br>";

			$col3_array = array();

			$query_ct3 = "SELECT * FROM ga_f5_column_3";
			if ($hml)
			{
				$query_ct3 .= "_$hml ";
			}
			if ($hml)
			{
				$query_ct3 .= " ORDER BY percent_y1 DESC, percent_y5 DESC ";
			} else {
				$query_ct3 .= " ORDER BY year1 DESC, year5 DESC ";
			}
			#$query_ct3 .= " ORDER BY percent_y1 DESC, percent_y5 DESC ";
			$query_ct3 .= "LIMIT 10 ";

			print "$query_ct3<p>";

			$mysqli_result_ct3 = mysqli_query($query_ct3, $mysqli_link) or die (mysqli_error($mysqli_link));

			while($row_ct3 = mysqli_fetch_array($mysqli_result_ct3))
			{
				array_push($col3_array,$row_ct3[num]);	
			}

			echo "<strong>col3_array = </strong>";
			print_r ($col3_array);
			echo "<br>";

			###################################################################################

			### combo ###
			$sql7 = "SELECT * FROM `ga_f5_combo_count_5_42_$hml` WHERE count >= 4 ORDER BY `count` DESC LIMIT 10 ";

			echo "$sql7<br>";

			$mysqli_result7 = mysqli_query($sql7, $mysqli_link) or die (mysqli_error($mysqli_link));

			while($row7 = mysqli_fetch_array($mysqli_result7))
			{
				echo "<h4>combo - $row7[combo2],$row7[combo3],$row7[combo4],$row7[combo5]</h4>";

				$count_combo = 0;

				### draw ###
				$sql_draw = "SELECT * FROM `ga_f5_draw_count_5_42_$hml` WHERE `count` >= 2 ORDER BY `count` DESC LIMIT 2  ";

				#echo "$sql_draw<br>";

				$mysqli_result_draw = mysqli_query($sql_draw, $mysqli_link) or die (mysqli_error($mysqli_link));

				while($row_draw = mysqli_fetch_array($mysqli_result_draw))
				{
					#echo "-----------------------------------------<br>";
					require ("includes_ga_f5/eo50_draw_range.incl");

					$count_draw = 0;
					
					echo "<p>draw - $row_draw[draw0],$row_draw[draw1],$row_draw[draw2],$row_draw[draw3]</p>";

					### dup ###
					$sql = "SELECT * FROM ga_f5_dup_5_42_$hml WHERE `dup1` <= 1 AND `dup2` <= 2 AND `dup3` <= 2 AND `count` > 0 ORDER BY `count` DESC LIMIT 2 ";

					#echo "$sql<br>";

					$mysqli_result_dup = mysqli_query($sql, $mysqli_link) or die (mysqli_error($mysqli_link));

					#echo "rows = $num_rows8<br>";

					while($row_dup = mysqli_fetch_array($mysqli_result_dup))
					{	
						echo "<p>dup - $row_dup[dup1],$row_dup[dup2],$row_dup[dup3]</p>";

						$count_dup = 0;

						### rank ###
						$sql_rank = "SELECT * FROM ga_f5_rank_5_42_";
						$sql_rank .= "$hml ORDER BY `count` DESC ";

						#echo "$sql_rank<br>";

						$mysqli_result_rank = mysqli_query($sql_rank, $mysqli_link) or die (mysqli_error($mysqli_link));

						#echo "rows = $num_rows8<br>";

						#while($row_rank = mysqli_fetch_array($mysqli_result_rank))
						#{
							for ($q = 0; $q < count($comb1_array)-1; $q++)  
							{
								for ($r = 0; $r < count($col3_array)-1; $r++)  
								{
									#echo "<p><b>combo - $combo - comb1_array = {$comb1_array[$q][0]},{$comb1_array[$q][1]} - col3_array = $col3_array[$r]</b></p>";
									
									#echo "rank limit - ";
									#print_r ($rank_limit);
									#echo "<br>";

									$query_comb12 = "SELECT * FROM combo_5_42 ";
									$query_comb12 .= "WHERE ";
									$query_comb12 .= "sum = $row_wheel[sum] ";
									$query_comb12 .= " AND even = $row_wheel[even] ";
									$query_comb12 .= " AND odd = $row_wheel[odd] ";
									$query_comb12 .= " AND d2_1 = $row_wheel[d501] ";
									$query_comb12 .= " AND d2_2 = $row_wheel[d502] ";
									$query_comb12 .= "AND d0 = $row_draw[draw0] ";
									$query_comb12 .= "AND d1 = $row_draw[draw1] ";
									$query_comb12 .= "AND d2 = $row_draw[draw2] ";
									#$query_comb12 .= "AND d3 = $row_draw[draw3] ";
									$query_comb12 .= "AND d3 <= 2 ";
									$query_comb12 .= "AND d4 <= 1 ";
									$query_comb12 .= "AND   dup1 = $row_dup[dup1] ";
									$query_comb12 .= "AND   dup2 = $row_dup[dup2] ";
									$query_comb12 .= "AND   dup3 = $row_dup[dup3] ";
									$query_comb12 .= "AND   dup4 >= 1 ";
									$query_comb12 .= "AND   dup5 >= 2 ";
									$query_comb12 .= "AND   dup6 >= 2 ";
									
									#for ($g = 4; $g <= 25; $g++)
									/*
									for ($g = 4; $g <= 10; $g++)
									{
										$query_comb12 .= "AND   dup";
										$query_comb12 .= "$g >= {$dup_range_all[$g][0]} ";
										$query_comb12 .= "AND   dup";
										$query_comb12 .= "$g <= {$dup_range_all[$g][1]} ";
									}
									*/

									$query_comb12 .= "AND   dup7 >= 3 "; #150831
									#$query_comb12 .= "AND   dup9 >= 4 "; #150423
									#$query_comb12 .= "AND   dup14 >= 4 "; #150831
									#$query_comb12 .= "AND   dup19 = 4 "; #150608
									#$query_comb12 .= "AND   dup25 >= 4 ";  #150910
									 
									$query_comb12 .= "AND comb2 = $row7[combo2] ";
									$query_comb12 .= "AND comb3 = $row7[combo3] ";
									$query_comb12 .= "AND comb4 = $row7[combo4] ";
									$query_comb12 .= "AND comb5 = $row7[combo5] ";
									$query_comb12 .= "AND seq2 <= 1 ";
									$query_comb12 .= "AND mod_tot <= 1 ";
									$query_comb12 .= "AND mod_x = 0 ";

									/*
									if (!$b1_low)
									{
										require ("includes_ga_f5/decade_draw_range.incl");
									}

									if ($b1_low)
									{
										$query_comb12 .= "AND   b1 >= $b1_low AND b1 <= $b1_high ";
										$query_comb12 .= "AND   b2 >= $b2_low AND b2 <= $b2_high ";
										$query_comb12 .= "AND   b3 >= $b3_low AND b3 <= $b3_high ";
										$query_comb12 .= "AND   b4 >= $b4_low AND b4 <= $b4_high ";
										$query_comb12 .= "AND   b5 >= $b5_low AND b5 <= $b5_high ";
										$query_comb12 .= "AND   b$combo_col1 = {$comb1_array[$q][0]} ";
										$query_comb12 .= "AND   b$combo_col2 = {$comb1_array[$q][1]} ";
									}
									*/

									$query_comb12 .= "AND   b$combo_col1 = {$comb1_array[$q][0]} ";
									$query_comb12 .= "AND   b$combo_col2 = {$comb1_array[$q][1]} ";
									

									if ($combo == 2 OR $combo == 5 OR $combo == 8 OR $combo == 9)
									{
										continue;
									} elseif ($col3_array[$r] > $comb1_array[$q][1]) {
										$query_comb12 .= "AND   b3 = $col3_array[$r] ";
									}
										
									$query_comb12 .= "AND   combo_total_2 <= 18 ";
									$query_comb12 .= "AND   nums_total_2 <= 197 ";
									$query_comb12 .= "AND   combo_total_3 <= 1 ";
									$query_comb12 .= "AND   nums_total_3 <= 17 ";
									$query_comb12 .= "AND   combo_total_4 = 0 ";
									$query_comb12 .= "AND   nums_total_4 <= 1 ";

									$query_comb12 .= "AND   rank0 <= $rank_limit[0] ";
									$query_comb12 .= "AND   rank1 <= $rank_limit[1] ";
									$query_comb12 .= "AND   rank2 <= $rank_limit[2] ";
									#$query_comb12 .= "AND   rank3 >= 1 "; #150908
									$query_comb12 .= "AND   rank3 <= $rank_limit[3] ";
									$query_comb12 .= "AND   rank4 <= $rank_limit[4] ";
									$query_comb12 .= "AND   rank5 <= $rank_limit[5] ";
									$query_comb12 .= "AND   rank6 <= $rank_limit[6] ";

									/*

									$query_comb12 .= "AND   rank0 = $row_rank[r0] ";
									$query_comb12 .= "AND   rank1 = $row_rank[r1] ";
									$query_comb12 .= "AND   rank2 = $row_rank[r2] ";
									$query_comb12 .= "AND   rank3 = $row_rank[r3] ";
									$query_comb12 .= "AND   rank4 = $row_rank[r4] ";
									$query_comb12 .= "AND   rank5 = $row_rank[r5] ";
									$query_comb12 .= "AND   rank6 = $row_rank[r6] ";
									$query_comb12 .= "AND   rank0 <= $rank_limit[0] ";
									$query_comb12 .= "AND   rank1 <= $rank_limit[1] ";
									$query_comb12 .= "AND   rank2 <= $rank_limit[2] ";
									$query_comb12 .= "AND   rank3 <= $rank_limit[3] ";
									$query_comb12 .= "AND   rank4 <= $rank_limit[4] ";
									$query_comb12 .= "AND   rank5 <= $rank_limit[5] ";
									$query_comb12 .= "AND   rank6 <= $rank_limit[6] ";

									$query_comb12 .= "AND   b1 >= $b1_low ";
									$query_comb12 .= "AND   b1 <= $b1_high ";
									$query_comb12 .= "AND   b2 >= $b2_low ";
									$query_comb12 .= "AND   b2 <= $b2_high ";
									$query_comb12 .= "AND   b3 >= $b3_low ";
									$query_comb12 .= "AND   b3 <= $b3_high ";
									$query_comb12 .= "AND   b4 >= $b4_low ";
									$query_comb12 .= "AND   b4 <= $b4_high ";
									$query_comb12 .= "AND   b5 >= $b5_low ";
									$query_comb12 .= "AND   b5 <= $b5_high ";
									*/
									$query_comb12 .= "AND   last_updated = '$curr_date' ";
									
									#$query_comb12 .= "ORDER BY y1_sum DESC ";

									if ($b1_low < 59)
									{
										#echo "$query_comb12<p>";
										#die();
									}

									$mysqli_result_col12 = mysqli_query($query_comb12, $mysqli_link) or die (mysqli_error($mysqli_link));

									$num_rows_col12 = mysqli_num_rows($mysqli_result_col12);

									#if ($num_rows_col12 AND $count_col12 <= 10 AND $count_draw < 1)
									if ($num_rows_col12)
									{
										echo "<strong>rows found - $num_rows_col12</strong><br>";

										$row_col12 = mysqli_fetch_array($mysqli_result_col12);
										echo "draw - <strong>$row_draw[draw0],$row_draw[draw1],$row_draw[draw2],$row_draw[draw3]</strong><br>";
										echo "combo - <b>$row7[combo2],$row7[combo3],$row7[combo4],$row7[combo5]</b><br>";
										echo "dup - <b>$row_col12[dup1],$row_col12[dup2],$row_col12[dup3]...$row_col12[dup21](dup21)</b><br>";
										echo "$row_col12[sum]-$row_col12[b1]-$row_col12[b2]-$row_col12[b3]-$row_col12[b4]-$row_col12[b5]--$row_col12[y1_sum]<br>";
										$count_combo++;
										$count_dup++;
										$count_draw++;
										$count_col12++;
										$count_col12_all++;
										echo "count_col12 = $count_col12,count_combo = $count_combo,count_dup = $count_dup,count_draw = $count_draw,<br>";
										echo "--------------------------------------------------------------<br>";
										insert_draw_table_small($row_col12[id],$combo);
										###
									}
								} #comb3_array
							} #comb1_array
						#}#rank
					} #dup
				} #draw
			} #combo
		} #wheel
	}
?>